<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.1.6">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2016-08-05T00:58:28+00:00</updated><id>/</id><title>Phani Raj</title><subtitle>Technical Lead at HP Cloud</subtitle><entry><title>Youâ€™re up and running!</title><link href="/Hello-World/" rel="alternate" type="text/html" title="You&#39;re up and running!" /><published>2014-03-03T00:00:00+00:00</published><updated>2014-03-03T00:00:00+00:00</updated><id>/Hello-World</id><content type="html" xml:base="/Hello-World/">&lt;p&gt;Next you can update your site name, avatar and other options using the _config.yml file in the root of your repository (shown below).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/config.png&quot; alt=&quot;_config.yml&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The easiest way to make your first post is to edit this one. Go into /_posts/ and update the Hello World markdown file. For more instructions head over to the &lt;a href=&quot;https://github.com/barryclark/jekyll-now&quot;&gt;Jekyll Now repository&lt;/a&gt; on GitHub.&lt;/p&gt;</content><summary>Next you can update your site name, avatar and other options using the _config.yml file in the root of your repository (shown below).</summary></entry><entry><title>Building a HQL IDE for Apache Hive</title><link href="/building-a-hql-ide-for-apache-hive/" rel="alternate" type="text/html" title="Building a HQL IDE for Apache Hive" /><published>2012-12-17T18:30:00+00:00</published><updated>2012-12-17T18:30:00+00:00</updated><id>/building-a-hql-ide-for-apache-hive</id><content type="html" xml:base="/building-a-hql-ide-for-apache-hive/">&lt;p&gt;My new team ( &lt;a title=&quot;https://www.hadooponazure.com/&quot; href=&quot;https://www.hadooponazure.com/&quot;&gt;https://www.hadooponazure.com/&lt;/a&gt;) works on making &lt;br /&gt;Windows Server &amp;amp; Windows Azure the best environment for hosting Hadoop.&amp;nbsp;&amp;nbsp; &lt;br /&gt;As one my new challenges, I&amp;rsquo;ve been tasked with building an editor / job manager to Apache Hive. &lt;br /&gt;Seen below is my first draft at providing a terminal for running and saving Hive Jobs using HQL.&lt;/p&gt;
&lt;p&gt;Please direct all comments/feedback to PhaniRaj AT Microsoft DOT COM&lt;/p&gt;
&lt;p&gt;This is what the editor looks like&amp;nbsp; :&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://msdnshared.blob.core.windows.net/media/MSDNBlogsFS/prod.evol.blogs.msdn.com/CommunityServer.Blogs.Components.WeblogFiles/00/00/00/75/24/metablogapi/6521.HiveQueryEditor_53FA16DB.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/6521.HiveQueryEditor_5F00_53FA16DB.png&quot;&gt;&lt;img style=&quot;border: 0px currentcolor; display: inline;&quot; title=&quot;HiveQueryEditor&quot; src=&quot;/assets/5543.HiveQueryEditor_thumb_1EED87AB.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/5543.HiveQueryEditor_5F00_thumb_5F00_1EED87AB.png&quot; alt=&quot;HiveQueryEditor&quot; width=&quot;806&quot; height=&quot;436&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s start by first creating a connection to your local Hive server.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://msdnshared.blob.core.windows.net/media/MSDNBlogsFS/prod.evol.blogs.msdn.com/CommunityServer.Blogs.Components.WeblogFiles/00/00/00/75/24/metablogapi/5047.CreateNewConnection_2CBFCDA6.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/5047.CreateNewConnection_5F00_2CBFCDA6.png&quot;&gt;&lt;img style=&quot;border: 0px currentcolor; display: inline;&quot; title=&quot;CreateNewConnection&quot; src=&quot;/assets/4061.CreateNewConnection_thumb_5EB76E30.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/4061.CreateNewConnection_5F00_thumb_5F00_5EB76E30.png&quot; alt=&quot;CreateNewConnection&quot; width=&quot;397&quot; height=&quot;351&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once the connection is created, we connect to the Hive server by using the &lt;a href=&quot;http://social.technet.microsoft.com/wiki/contents/articles/6226.how-to-connect-excel-to-hadoop-on-azure-via-hiveodbc-en-us.aspx&quot;&gt;Microsoft ODBC Driver for Hive&lt;/a&gt; . &lt;br /&gt;We&amp;rsquo;ll soon move the console over to use Apache&amp;rsquo;s new Templeton apis for metadata access and job submission. &lt;br /&gt;You can learn more about Templeton here : &lt;a title=&quot;http://people.apache.org/~thejas/templeton_doc_latest/&quot; href=&quot;http://people.apache.org/~thejas/templeton_doc_latest/&quot;&gt;http://people.apache.org/~thejas/templeton_doc_latest/&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://msdnshared.blob.core.windows.net/media/MSDNBlogsFS/prod.evol.blogs.msdn.com/CommunityServer.Blogs.Components.WeblogFiles/00/00/00/75/24/metablogapi/3465.LoadingMetadata_6C89B42B.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/3465.LoadingMetadata_5F00_6C89B42B.png&quot;&gt;&lt;img style=&quot;border: 0px currentcolor; display: inline;&quot; title=&quot;LoadingMetadata&quot; src=&quot;/assets/7607.LoadingMetadata_thumb_4C6EA76E.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/7607.LoadingMetadata_5F00_thumb_5F00_4C6EA76E.png&quot; alt=&quot;LoadingMetadata&quot; width=&quot;240&quot; height=&quot;96&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Support for basic Hive Metadata visualization&lt;/h4&gt;
&lt;p&gt;We visualize the Hive metadata as a hierarchical tree-view .&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://msdnshared.blob.core.windows.net/media/MSDNBlogsFS/prod.evol.blogs.msdn.com/CommunityServer.Blogs.Components.WeblogFiles/00/00/00/75/24/metablogapi/7587.metadata_tree_2C539AB1.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/7587.metadata_5F00_tree_5F00_2C539AB1.png&quot;&gt;&lt;img style=&quot;border: 0px currentcolor; display: inline;&quot; title=&quot;metadata_tree&quot; src=&quot;/assets/5444.metadata_tree_thumb_25345E39.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/5444.metadata_5F00_tree_5F00_thumb_5F00_25345E39.png&quot; alt=&quot;metadata_tree&quot; width=&quot;193&quot; height=&quot;395&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;A query editor for HQL that supports syntax coloring, auto completion and other fun activities.&lt;/h4&gt;
&lt;p&gt;The IDE hosts an editor that supports auto completion &amp;amp; syntax coloring for HQL keywords &amp;amp; functions. &lt;br /&gt;You can find HQL&amp;rsquo;s language specification here : &lt;a title=&quot;https://cwiki.apache.org/confluence/display/Hive/LanguageManual&quot; href=&quot;https://cwiki.apache.org/confluence/display/Hive/LanguageManual&quot;&gt;https://cwiki.apache.org/confluence/display/Hive/LanguageManual&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;Clicking on a table name from the above tree view produces a sample query that selects the first 10 rows from the table.&amp;nbsp;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://msdnshared.blob.core.windows.net/media/MSDNBlogsFS/prod.evol.blogs.msdn.com/CommunityServer.Blogs.Components.WeblogFiles/00/00/00/75/24/metablogapi/3301.SampleQueryFromTable_572BFEC3.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/3301.SampleQueryFromTable_5F00_572BFEC3.png&quot;&gt;&lt;img style=&quot;border: 0px currentcolor; display: inline;&quot; title=&quot;SampleQueryFromTable&quot; src=&quot;/assets/2705.SampleQueryFromTable_thumb_4C027479.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/2705.SampleQueryFromTable_5F00_thumb_5F00_4C027479.png&quot; alt=&quot;SampleQueryFromTable&quot; width=&quot;302&quot; height=&quot;357&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can edit this query or clear it and start over.&lt;/p&gt;
&lt;h4&gt;HQL Code Snippets for common tasks in Hive&lt;/h4&gt;
&lt;p&gt;We&amp;rsquo;ve seeded the editor with some code snippets for common tasks . &lt;br /&gt;Below is an example of the &amp;ldquo;Create External Table&amp;rdquo; code snippet.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://msdnshared.blob.core.windows.net/media/MSDNBlogsFS/prod.evol.blogs.msdn.com/CommunityServer.Blogs.Components.WeblogFiles/00/00/00/75/24/metablogapi/5037.CodeSnippets1_2BE767BC.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/5037.CodeSnippets1_5F00_2BE767BC.png&quot;&gt;&lt;img style=&quot;border: 0px currentcolor; display: inline;&quot; title=&quot;CodeSnippets1&quot; src=&quot;/assets/3884.CodeSnippets1_thumb_5DDF0846.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/3884.CodeSnippets1_5F00_thumb_5F00_5DDF0846.png&quot; alt=&quot;CodeSnippets1&quot; width=&quot;472&quot; height=&quot;244&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://msdnshared.blob.core.windows.net/media/MSDNBlogsFS/prod.evol.blogs.msdn.com/CommunityServer.Blogs.Components.WeblogFiles/00/00/00/75/24/metablogapi/2388.CodeSnippets2_52B57DFC.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/2388.CodeSnippets2_5F00_52B57DFC.png&quot;&gt;&lt;img style=&quot;border: 0px currentcolor; display: inline;&quot; title=&quot;CodeSnippets2&quot; src=&quot;/assets/2311.CodeSnippets2_thumb_1DA8EECC.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/2311.CodeSnippets2_5F00_thumb_5F00_1DA8EECC.png&quot; alt=&quot;CodeSnippets2&quot; width=&quot;518&quot; height=&quot;106&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp; &lt;/p&gt;
&lt;h4&gt;Auto completion&amp;nbsp; support for hive Functions in the editor.&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://msdnshared.blob.core.windows.net/media/MSDNBlogsFS/prod.evol.blogs.msdn.com/CommunityServer.Blogs.Components.WeblogFiles/00/00/00/75/24/metablogapi/7181.HiveFunctionsAutocompletion_2B7B34C7.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/7181.HiveFunctionsAutocompletion_5F00_2B7B34C7.png&quot;&gt;&lt;img style=&quot;border: 0px currentcolor; display: inline;&quot; title=&quot;HiveFunctionsAutocompletion&quot; src=&quot;/assets/6505.HiveFunctionsAutocompletion_thumb_726457C4.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/6505.HiveFunctionsAutocompletion_5F00_thumb_5F00_726457C4.png&quot; alt=&quot;HiveFunctionsAutocompletion&quot; width=&quot;379&quot; height=&quot;191&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h4&gt;Auto completion&amp;nbsp; support for hive keywords in the editor.&lt;/h4&gt;
&lt;p&gt;About 163 keywords in HQL are supported in the editor.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://msdnshared.blob.core.windows.net/media/MSDNBlogsFS/prod.evol.blogs.msdn.com/CommunityServer.Blogs.Components.WeblogFiles/00/00/00/75/24/metablogapi/1738.HiveKeywordAutocompletion_766EA596.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/1738.HiveKeywordAutocompletion_5F00_766EA596.png&quot;&gt;&lt;img style=&quot;border: 0px currentcolor; display: inline;&quot; title=&quot;HiveKeywordAutocompletion&quot; src=&quot;/assets/7674.HiveKeywordAutocompletion_thumb_6B451B4C.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/7674.HiveKeywordAutocompletion_5F00_thumb_5F00_6B451B4C.png&quot; alt=&quot;HiveKeywordAutocompletion&quot; width=&quot;426&quot; height=&quot;323&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h4&gt;Metadata sensitive auto completion support for queries.&lt;/h4&gt;
&lt;p&gt;We inject the metadata we gleaned from the Hive server into the editor so that &lt;br /&gt;you can use intellisense on column names in your queries.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://msdnshared.blob.core.windows.net/media/MSDNBlogsFS/prod.evol.blogs.msdn.com/CommunityServer.Blogs.Components.WeblogFiles/00/00/00/75/24/metablogapi/8255.Metadata_autocompletion_6425DED4.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/8255.Metadata_5F00_autocompletion_5F00_6425DED4.png&quot;&gt;&lt;img style=&quot;border: 0px currentcolor; display: inline;&quot; title=&quot;Metadata_autocompletion&quot; src=&quot;/assets/0825.Metadata_autocompletion_thumb_440AD217.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/0825.Metadata_5F00_autocompletion_5F00_thumb_5F00_440AD217.png&quot; alt=&quot;Metadata_autocompletion&quot; width=&quot;378&quot; height=&quot;378&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once you have the query written, hit &amp;ldquo;Run Query&amp;rdquo; to kick off query execution. &lt;br /&gt;We kick off the Hive job and wait for its completion, intermittently polling for the results.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://msdnshared.blob.core.windows.net/media/MSDNBlogsFS/prod.evol.blogs.msdn.com/CommunityServer.Blogs.Components.WeblogFiles/00/00/00/75/24/metablogapi/1212.QueryRunning_51DD1812.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/1212.QueryRunning_5F00_51DD1812.png&quot;&gt;&lt;img style=&quot;border: 0px currentcolor; display: inline;&quot; title=&quot;QueryRunning&quot; src=&quot;/assets/5444.QueryRunning_thumb_55E765E4.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/5444.QueryRunning_5F00_thumb_5F00_55E765E4.png&quot; alt=&quot;QueryRunning&quot; width=&quot;240&quot; height=&quot;134&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once the query is finished successfully, you will see the query icon light up.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://msdnshared.blob.core.windows.net/media/MSDNBlogsFS/prod.evol.blogs.msdn.com/CommunityServer.Blogs.Components.WeblogFiles/00/00/00/75/24/metablogapi/3301.QuerySucceeded_4ABDDB9A.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/3301.QuerySucceeded_5F00_4ABDDB9A.png&quot;&gt;&lt;img style=&quot;border: 0px currentcolor; display: inline;&quot; title=&quot;QuerySucceeded&quot; src=&quot;/assets/2705.QuerySucceeded_thumb_2AA2CEDD.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/2705.QuerySucceeded_5F00_thumb_5F00_2AA2CEDD.png&quot; alt=&quot;QuerySucceeded&quot; width=&quot;246&quot; height=&quot;121&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Clicking on the query icon should bring up the results in a tabular format.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://msdnshared.blob.core.windows.net/media/MSDNBlogsFS/prod.evol.blogs.msdn.com/CommunityServer.Blogs.Components.WeblogFiles/00/00/00/75/24/metablogapi/1727.QueryResults_0A87C220.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/1727.QueryResults_5F00_0A87C220.png&quot;&gt;&lt;img style=&quot;border: 0px currentcolor; display: inline;&quot; title=&quot;QueryResults&quot; src=&quot;/assets/2388.QueryResults_thumb_557B32EF.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/2388.QueryResults_5F00_thumb_5F00_557B32EF.png&quot; alt=&quot;QueryResults&quot; width=&quot;640&quot; height=&quot;410&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If on the other hand, the query failed, you will see a &amp;ldquo;query failed&amp;rdquo; icon next to the query.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://msdnshared.blob.core.windows.net/media/MSDNBlogsFS/prod.evol.blogs.msdn.com/CommunityServer.Blogs.Components.WeblogFiles/00/00/00/75/24/metablogapi/1803.QueryFailed_70B38BF0.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/1803.QueryFailed_5F00_70B38BF0.png&quot;&gt;&lt;img style=&quot;border: 0px currentcolor; display: inline;&quot; title=&quot;QueryFailed&quot; src=&quot;/assets/8750.QueryFailed_thumb_09AF5C36.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/8750.QueryFailed_5F00_thumb_5F00_09AF5C36.png&quot; alt=&quot;QueryFailed&quot; width=&quot;266&quot; height=&quot;102&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Clicking on this will bring up a window with links where you can further see details about why the query failed.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://msdnshared.blob.core.windows.net/media/MSDNBlogsFS/prod.evol.blogs.msdn.com/CommunityServer.Blogs.Components.WeblogFiles/00/00/00/75/24/metablogapi/7587.QueryFailed_details_69944F78.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/7587.QueryFailed_5F00_details_5F00_69944F78.png&quot;&gt;&lt;img style=&quot;border: 0px currentcolor; display: inline;&quot; title=&quot;QueryFailed_details&quot; src=&quot;/assets/5025.QueryFailed_details_thumb_1B8BF003.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/5025.QueryFailed_5F00_details_5F00_thumb_5F00_1B8BF003.png&quot; alt=&quot;QueryFailed_details&quot; width=&quot;682&quot; height=&quot;154&quot; border=&quot;0&quot; /&gt;&amp;nbsp;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In conclusion, I hope this is something that you find useful. &lt;br /&gt;As always your feedback and comments are welcome at my email mentioned above. &lt;br /&gt;There&amp;rsquo;s many other features that we&amp;rsquo;re planning for this editor and will post regular updates to this work as we progress.&lt;/p&gt;</content><author><name>{&quot;login&quot;=&gt;&quot;phanirajuyn&quot;, &quot;email&quot;=&gt;&quot;PhaniRaj@Microsoft.com&quot;, &quot;display_name&quot;=&gt;&quot;Phani Raju MSFT&quot;, &quot;first_name&quot;=&gt;&quot;&quot;, &quot;last_name&quot;=&gt;&quot;&quot;}</name><email>PhaniRaj@Microsoft.com</email></author><summary>My new team ( https://www.hadooponazure.com/) works on making Windows Server &amp;amp; Windows Azure the best environment for hosting Hadoop.&amp;nbsp;&amp;nbsp; As one my new challenges, I&amp;rsquo;ve been tasked with building an editor / job manager to Apache Hive. Seen below is my first draft at providing a terminal for running and saving Hive Jobs using HQL.
Please direct all comments/feedback to PhaniRaj AT Microsoft DOT COM
This is what the editor looks like&amp;nbsp; :
&amp;nbsp;
Let&amp;rsquo;s start by first creating a connection to your local Hive server.

Once the connection is created, we connect to the Hive server by using the Microsoft ODBC Driver for Hive . We&amp;rsquo;ll soon move the console over to use Apache&amp;rsquo;s new Templeton apis for metadata access and job submission. You can learn more about Templeton here : http://people.apache.org/~thejas/templeton_doc_latest/ 

Support for basic Hive Metadata visualization
We visualize the Hive metadata as a hierarchical tree-view .

A query editor for HQL that supports syntax coloring, auto completion and other fun activities.
The IDE hosts an editor that supports auto completion &amp;amp; syntax coloring for HQL keywords &amp;amp; functions. You can find HQL&amp;rsquo;s language specification here : https://cwiki.apache.org/confluence/display/Hive/LanguageManual 
Clicking on a table name from the above tree view produces a sample query that selects the first 10 rows from the table.&amp;nbsp;&amp;nbsp;

You can edit this query or clear it and start over.
HQL Code Snippets for common tasks in Hive
We&amp;rsquo;ve seeded the editor with some code snippets for common tasks . Below is an example of the &amp;ldquo;Create External Table&amp;rdquo; code snippet.

&amp;nbsp;&amp;nbsp; 
Auto completion&amp;nbsp; support for hive Functions in the editor.

&amp;nbsp;
Auto completion&amp;nbsp; support for hive keywords in the editor.
About 163 keywords in HQL are supported in the editor.

&amp;nbsp;
Metadata sensitive auto completion support for queries.
We inject the metadata we gleaned from the Hive server into the editor so that you can use intellisense on column names in your queries.
&amp;nbsp;

Once you have the query written, hit &amp;ldquo;Run Query&amp;rdquo; to kick off query execution. We kick off the Hive job and wait for its completion, intermittently polling for the results.

Once the query is finished successfully, you will see the query icon light up.

Clicking on the query icon should bring up the results in a tabular format.

If on the other hand, the query failed, you will see a &amp;ldquo;query failed&amp;rdquo; icon next to the query.

Clicking on this will bring up a window with links where you can further see details about why the query failed.
&amp;nbsp;
In conclusion, I hope this is something that you find useful. As always your feedback and comments are welcome at my email mentioned above. There&amp;rsquo;s many other features that we&amp;rsquo;re planning for this editor and will post regular updates to this work as we progress.</summary></entry><entry><title>Async extension methods for OData Windows 8 client library</title><link href="/async-extension-methods-for-odata-windows-8-client-library/" rel="alternate" type="text/html" title="Async extension methods for OData Windows 8 client library" /><published>2012-08-22T13:46:00+00:00</published><updated>2012-08-22T13:46:00+00:00</updated><id>/async-extension-methods-for-odata-windows-8-client-library</id><content type="html" xml:base="/async-extension-methods-for-odata-windows-8-client-library/">&lt;p&gt;If youâ€™re writing Windows Store applications and want to use the async goodness that the platform allows with your OData client applications,    &lt;br /&gt;take a look at these extension methods that allow you to use the await and async keywords in your apps.     &lt;/p&gt;
&lt;p&gt;Some useful links &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.microsoft.com/en-us/download/details.aspx?id=30714&quot;&gt;WCF Data Services Tools for Windows Store Apps RC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/vstudio/async.aspx&quot;&gt;Visual Studio Asynchronous Programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/windows/apps/br229516.aspx&quot;&gt;Downloads for Metro style app development&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#160;&lt;/p&gt;
&lt;p&gt; &lt;script src=&quot;https://gist.github.com/3427256.js&quot;&gt; &lt;/script&gt;&lt;/p&gt;</content><author><name>{&quot;login&quot;=&gt;&quot;phanirajuyn&quot;, &quot;email&quot;=&gt;&quot;PhaniRaj@Microsoft.com&quot;, &quot;display_name&quot;=&gt;&quot;Phani Raju MSFT&quot;, &quot;first_name&quot;=&gt;&quot;&quot;, &quot;last_name&quot;=&gt;&quot;&quot;}</name><email>PhaniRaj@Microsoft.com</email></author><category term="DataServiceContext" /><category term="Demo" /><summary>If youâ€™re writing Windows Store applications and want to use the async goodness that the platform allows with your OData client applications,    take a look at these extension methods that allow you to use the await and async keywords in your apps.     
Some useful links 

WCF Data Services Tools for Windows Store Apps RC
Visual Studio Asynchronous Programming
Downloads for Metro style app development

&amp;#160;</summary></entry><entry><title>Upcoming edits to the OData Explorer.</title><link href="/upcoming-edits-to-the-odata-explorer/" rel="alternate" type="text/html" title="Upcoming edits to the OData Explorer." /><published>2012-05-29T16:31:00+00:00</published><updated>2012-05-29T16:31:00+00:00</updated><id>/upcoming-edits-to-the-odata-explorer</id><content type="html" xml:base="/upcoming-edits-to-the-odata-explorer/">&lt;p&gt;This blog post outlines some key changes to the OData Explorer which should be published soon. &lt;br /&gt;Take a look below and let me know what you think.The overall theme is simplicity , &lt;br /&gt;we&amp;rsquo;ve removed a lot of superfluous cruft in the UI . Also, moving to OData Library and &lt;br /&gt;Edm Library has helped me get rid of pesky bugs that existed in the last version.&lt;/p&gt;
&lt;h4&gt;Add new workspace window&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://msdnshared.blob.core.windows.net/media/MSDNBlogsFS/prod.evol.blogs.msdn.com/CommunityServer.Blogs.Components.WeblogFiles/00/00/00/75/24/metablogapi/2211.AddnewWorkspace_1EE7DE03.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/2211.AddnewWorkspace_5F00_1EE7DE03.png&quot;&gt;&lt;img style=&quot;border: 0px currentcolor; display: inline; background-image: none;&quot; title=&quot;AddnewWorkspace&quot; border=&quot;0&quot; alt=&quot;AddnewWorkspace&quot; src=&quot;/assets/1638.AddnewWorkspace_thumb_2C4DF109.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/1638.AddnewWorkspace_5F00_thumb_5F00_2C4DF109.png&quot; width=&quot;240&quot; height=&quot;158&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Browse collections exposed by an OData Service.&lt;/h4&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://msdnshared.blob.core.windows.net/media/MSDNBlogsFS/prod.evol.blogs.msdn.com/CommunityServer.Blogs.Components.WeblogFiles/00/00/00/75/24/metablogapi/3113.SelectCollection_6C17D78E.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/3113.SelectCollection_5F00_6C17D78E.png&quot;&gt;&lt;img style=&quot;display: inline; background-image: none;&quot; title=&quot;SelectCollection&quot; border=&quot;0&quot; alt=&quot;SelectCollection&quot; src=&quot;/assets/0564.SelectCollection_thumb_72CAE111.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/0564.SelectCollection_5F00_thumb_5F00_72CAE111.png&quot; width=&quot;338&quot; height=&quot;484&quot; /&gt;&amp;nbsp;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h4&gt;Get first 50 rows from a collection in the OData Service.&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://msdnshared.blob.core.windows.net/media/MSDNBlogsFS/prod.evol.blogs.msdn.com/CommunityServer.Blogs.Components.WeblogFiles/00/00/00/75/24/metablogapi/5367.SelectProducts_04A774DF.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/5367.SelectProducts_5F00_04A774DF.png&quot;&gt;&lt;img style=&quot;border: 0px currentcolor; display: inline; background-image: none;&quot; title=&quot;SelectProducts&quot; border=&quot;0&quot; alt=&quot;SelectProducts&quot; src=&quot;/assets/0160.SelectProducts_thumb_725EAE1C.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/0160.SelectProducts_5F00_thumb_5F00_725EAE1C.png&quot; width=&quot;644&quot; height=&quot;360&quot; /&gt;&amp;nbsp;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Filter by reference navigation properties in the Query Builder menu.&lt;/h4&gt;
&lt;p&gt;If a type Product has a&amp;nbsp; 1:1 relationship with Categories, you can filter a Products by properties of its &lt;br /&gt;Category.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://msdnshared.blob.core.windows.net/media/MSDNBlogsFS/prod.evol.blogs.msdn.com/CommunityServer.Blogs.Components.WeblogFiles/00/00/00/75/24/metablogapi/1145.FilterByNavigationProperty_322894A2.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/1145.FilterByNavigationProperty_5F00_322894A2.png&quot;&gt;&lt;img style=&quot;border: 0px currentcolor; display: inline; background-image: none;&quot; title=&quot;FilterByNavigationProperty&quot; border=&quot;0&quot; alt=&quot;FilterByNavigationProperty&quot; src=&quot;/assets/8562.FilterByNavigationProperty_thumb_4405286F.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/8562.FilterByNavigationProperty_5F00_thumb_5F00_4405286F.png&quot; width=&quot;568&quot; height=&quot;484&quot; /&gt;&amp;nbsp;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Clicking on &amp;ldquo;Edit&amp;rdquo; next to each row in the grid brings up the edit menu which allows you to :&lt;/h4&gt;
&lt;h4&gt;Edit property values and save to the server . &lt;br /&gt;&lt;a href=&quot;https://msdnshared.blob.core.windows.net/media/MSDNBlogsFS/prod.evol.blogs.msdn.com/CommunityServer.Blogs.Components.WeblogFiles/00/00/00/75/24/metablogapi/2318.EditTable_1CCADF3A.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/2318.EditTable_5F00_1CCADF3A.png&quot;&gt;&lt;img style=&quot;display: inline; background-image: none;&quot; title=&quot;EditTable&quot; border=&quot;0&quot; alt=&quot;EditTable&quot; src=&quot;/assets/8883.EditTable_thumb_588A77ED.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/8883.EditTable_5F00_thumb_5F00_588A77ED.png&quot; width=&quot;355&quot; height=&quot;484&quot; /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;Edit Raw ATOM for an entity and save to the server&lt;/h4&gt;
&lt;p&gt;Use this feature to send malformed ATOM payloads to your service and test how the server handles it.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://msdnshared.blob.core.windows.net/media/MSDNBlogsFS/prod.evol.blogs.msdn.com/CommunityServer.Blogs.Components.WeblogFiles/00/00/00/75/24/metablogapi/2630.EditRawAtom_6A670BBA.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/2630.EditRawAtom_5F00_6A670BBA.png&quot;&gt;&lt;img style=&quot;display: inline; background-image: none;&quot; title=&quot;EditRawAtom&quot; border=&quot;0&quot; alt=&quot;EditRawAtom&quot; src=&quot;/assets/7433.EditRawAtom_thumb_2A30F240.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/7433.EditRawAtom_5F00_thumb_5F00_2A30F240.png&quot; width=&quot;411&quot; height=&quot;484&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Edit Raw JSON for an entity and save to the server.&lt;/h4&gt;
&lt;p&gt;Use this feature to send malformed JSON payloads to your service and test how the server handles it. &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://msdnshared.blob.core.windows.net/media/MSDNBlogsFS/prod.evol.blogs.msdn.com/CommunityServer.Blogs.Components.WeblogFiles/00/00/00/75/24/metablogapi/0160.EditRawJSON_3C0D860D.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/0160.EditRawJSON_5F00_3C0D860D.png&quot;&gt;&lt;img style=&quot;display: inline; background-image: none;&quot; title=&quot;EditRawJSON&quot; border=&quot;0&quot; alt=&quot;EditRawJSON&quot; src=&quot;/assets/1145.EditRawJSON_thumb_62DB9C4D.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/1145.EditRawJSON_5F00_thumb_5F00_62DB9C4D.png&quot; width=&quot;374&quot; height=&quot;484&quot; /&gt;&lt;/a&gt;&lt;/p&gt;</content><author><name>{&quot;login&quot;=&gt;&quot;phanirajuyn&quot;, &quot;email&quot;=&gt;&quot;PhaniRaj@Microsoft.com&quot;, &quot;display_name&quot;=&gt;&quot;Phani Raju MSFT&quot;, &quot;first_name&quot;=&gt;&quot;&quot;, &quot;last_name&quot;=&gt;&quot;&quot;}</name><email>PhaniRaj@Microsoft.com</email></author><summary>This blog post outlines some key changes to the OData Explorer which should be published soon. Take a look below and let me know what you think.The overall theme is simplicity , we&amp;rsquo;ve removed a lot of superfluous cruft in the UI . Also, moving to OData Library and Edm Library has helped me get rid of pesky bugs that existed in the last version.
Add new workspace window

Browse collections exposed by an OData Service.
&amp;nbsp;
&amp;nbsp;
&amp;nbsp;
Get first 50 rows from a collection in the OData Service.
&amp;nbsp;
Filter by reference navigation properties in the Query Builder menu.
If a type Product has a&amp;nbsp; 1:1 relationship with Categories, you can filter a Products by properties of its Category.
&amp;nbsp;
Clicking on &amp;ldquo;Edit&amp;rdquo; next to each row in the grid brings up the edit menu which allows you to :
Edit property values and save to the server .  
Edit Raw ATOM for an entity and save to the server
Use this feature to send malformed ATOM payloads to your service and test how the server handles it.

Edit Raw JSON for an entity and save to the server.
Use this feature to send malformed JSON payloads to your service and test how the server handles it.</summary></entry><entry><title>Bookmarklet to customize Facebook buttons</title><link href="/bookmarklet-to-customize-facebook-buttons/" rel="alternate" type="text/html" title="Bookmarklet to customize Facebook buttons" /><published>2012-05-16T18:53:00+00:00</published><updated>2012-05-16T18:53:00+00:00</updated><id>/bookmarklet-to-customize-facebook-buttons</id><content type="html" xml:base="/bookmarklet-to-customize-facebook-buttons/">&lt;p&gt;&lt;span style=&quot;font-size: medium;&quot;&gt;What is it ?&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-size: small;&quot;&gt;This bookmarklet is a simple javascript function that changes the contents of standard buttons on Facebook.com.&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-size: small;&quot;&gt;It changes the &quot;Like&quot; button content to be &quot;Can you Dig it?&quot;, unlike to &quot;Stop Digging it&quot;, and Comment to &quot;Holler!&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-size: medium;&quot;&gt;How do I install this bookmarklet ?&lt;/span&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-size: small;&quot;&gt;Step 1 : Right-click this link and select &quot;Copy Link address&quot;,&lt;a href=&quot;javascript:function digIt(){var cLT=function(l,m){l.value=m;l.title=m;};var cLH=function(l,m){l.innerHTML=m;l.title=m;};var gECN=function(cN){return document.getElementsByClassName(cN);};var lMr=&amp;quot;Can you Dig it?&amp;quot;;var i=0;var links=gECN(&amp;quot;default_message&amp;quot;);for(i=0;i
&lt;links.length;i++){cLH(links[i],links[i].innerHTML==&amp;quot;Like&amp;quot;?lMr:&amp;quot;Stop digging it&amp;quot;);}var lBs=gECN(&amp;quot;like_link&amp;quot;);for(i=0;i&lt;lBs.length;i++){cLT(lBs[i],lMr);}var cL=gECN(&amp;quot;comment_link&amp;quot;);for(i=0;i&lt;cL.length;i++){cLT(cL[i].firstChild,&amp;quot;Holler!&amp;quot;)}};digIt();&quot;&gt; Bookmarklet link&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-size: small;&quot;&gt;Step 2 : Open the bookmarklet manager in your browser and add a bookmark with the contents of the above link as the Link Address.&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-size: small;&quot;&gt;Step 3 : Open up facebook.com and click the bookmark you created in Step 2.&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-size: small;&quot;&gt;Step 4 : Profit !&amp;nbsp;&lt;/span&gt;&lt;/p&gt;</content><author><name>{&quot;login&quot;=&gt;&quot;phanirajuyn&quot;, &quot;email&quot;=&gt;&quot;PhaniRaj@Microsoft.com&quot;, &quot;display_name&quot;=&gt;&quot;Phani Raju MSFT&quot;, &quot;first_name&quot;=&gt;&quot;&quot;, &quot;last_name&quot;=&gt;&quot;&quot;}</name><email>PhaniRaj@Microsoft.com</email></author><category term="facebook" /><summary>What is it ?&amp;nbsp;
This bookmarklet is a simple javascript function that changes the contents of standard buttons on Facebook.com.It changes the &quot;Like&quot; button content to be &quot;Can you Dig it?&quot;, unlike to &quot;Stop Digging it&quot;, and Comment to &quot;Holler!&quot;
How do I install this bookmarklet ?&amp;nbsp;
Step 1 : Right-click this link and select &quot;Copy Link address&quot;, Bookmarklet linkStep 2 : Open the bookmarklet manager in your browser and add a bookmark with the contents of the above link as the Link Address.Step 3 : Open up facebook.com and click the bookmark you created in Step 2.&amp;nbsp;Step 4 : Profit !&amp;nbsp;</summary></entry><entry><title>Developing Windows 8 Metro style applications that consume OData</title><link href="/developing-windows-8-metro-style-applications-that-consume-odata/" rel="alternate" type="text/html" title="Developing Windows 8 Metro style applications that consume OData" /><published>2012-04-26T14:38:00+00:00</published><updated>2012-04-26T14:38:00+00:00</updated><id>/developing-windows-8-metro-style-applications-that-consume-odata</id><content type="html" xml:base="/developing-windows-8-metro-style-applications-that-consume-odata/">&lt;p&gt;The Source code for the sample app is available here ( &lt;a href=&quot;http://sdrv.ms/IrEzwN&quot;&gt;Download&lt;/a&gt; )&lt;/p&gt;
&lt;p&gt;You&amp;rsquo;ll need : &lt;br /&gt;1. &lt;a href=&quot;http://msdn.microsoft.com/en-us/windows/apps&quot;&gt;Windows 8 Consumer preview and developer tools&lt;/a&gt; &lt;br /&gt;2. OData Client library preview for Windows 8 Metro ( &lt;b&gt;&lt;span&gt;Update:&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;span&gt;&lt;a href=&quot;https://sn2prd0310.outlook.com/owa/14.16.152.1/scripts/premium/redir.aspx?C=cvlFgTtlT0a3UGVHy3SS3lS3A-uhFc8Iz3KR2we21q2WSAxNQsPyqNAtVaqhFlSzDdP1bKucMx8.&amp;amp;URL=http%3a%2f%2fwww.microsoft.com%2fvisualstudio%2f11%2fen-us%2fdownloads%3fWT.mc_id%3dMSCOM_EN_US_HP_CAROUSEL_124GMUS017412%26CR_CC%3d200088137%23groups&quot; target=&quot;_blank&quot;&gt;Visual Studio 2012 RC&lt;/a&gt;&amp;nbsp;has been released and contains an updated version of these assemblies, along with fully-integrated support for Add Service Reference. Install the Ultimate, Professional, or Premium editions on&amp;nbsp;&lt;a href=&quot;https://sn2prd0310.outlook.com/owa/14.16.152.1/scripts/premium/redir.aspx?C=cvlFgTtlT0a3UGVHy3SS3lS3A-uhFc8Iz3KR2we21q2WSAxNQsPyqNAtVaqhFlSzDdP1bKucMx8.&amp;amp;URL=http%3a%2f%2fwindows.microsoft.com%2fen-US%2fwindows-8%2frelease-preview&quot; target=&quot;_blank&quot;&gt;Windows 8 Release Preview&lt;/a&gt;&amp;nbsp;to get the update.&lt;/span&gt;) . &lt;/p&gt;
&lt;p&gt;We&amp;rsquo;re releasing a preview version of the client libraries for Windows 8 Metro-Style applications to give our users &lt;br /&gt;the ability to create applications that work on Windows 8 .&amp;nbsp;&amp;nbsp; This client library will work with servers &lt;br /&gt;that comply with the OData v1-v3 protocols. In the blog post below we will describe a sample application &lt;br /&gt;we built and is available for download using this client library.&lt;/p&gt;
&lt;p&gt;Step Zero is to generate the client types for the Netflix OData Service using the DataSvcUtil.exe tool. &lt;br /&gt;We haven&amp;rsquo;t updated the &amp;ldquo;Add Service Reference&amp;rdquo;&amp;nbsp; gesture in Visual Studio 11 yet, so you&amp;rsquo;ll have to generate the client &lt;br /&gt;types manually . &lt;/p&gt;
&lt;p&gt;Here is how you generate the client proxy types for the Netflix OData Service&lt;/p&gt;
&lt;p&gt;Open a command prompt as administrator and navigate to %windir%\Microsoft.NET\Framework\v4.0.30128&lt;/p&gt;
&lt;p&gt;Run this command :&lt;/p&gt;
&lt;p&gt;DataSvcutil.exe /uri:&lt;a href=&quot;http://odata.netflix.com/Catalog/&quot;&gt;http://odata.netflix.com/Catalog/&lt;/a&gt; /DataServiceCollection /Version:2.0 &lt;br /&gt; /out:netflixClientTypes.cs&lt;/p&gt;
&lt;p&gt;Copy the generated netflixClientTypes.cs file into the application you create in the next step.&lt;/p&gt;
&lt;p&gt;Open Visual Studio&amp;nbsp;11 &amp;gt; &amp;ldquo;Create new Project&amp;rdquo; &amp;gt;&amp;rdquo;Grid Application&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://msdnshared.blob.core.windows.net/media/MSDNBlogsFS/prod.evol.blogs.msdn.com/CommunityServer.Blogs.Components.WeblogFiles/00/00/00/75/24/metablogapi/0726.New_Metro_Grid_Project_3675B0B9.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/0726.New_5F00_Metro_5F00_Grid_5F00_Project_5F00_3675B0B9.png&quot;&gt;&lt;img width=&quot;640&quot; height=&quot;439&quot; title=&quot;New_Metro_Grid_Project&quot; style=&quot;border: 0px currentcolor; display: inline; background-image: none;&quot; alt=&quot;New_Metro_Grid_Project&quot; src=&quot;/assets/0317.New_Metro_Grid_Project_thumb_0F3B6784.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/0317.New_5F00_Metro_5F00_Grid_5F00_Project_5F00_thumb_5F00_0F3B6784.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h4&gt;&amp;ldquo;Genres&amp;rdquo; view&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://msdnshared.blob.core.windows.net/media/MSDNBlogsFS/prod.evol.blogs.msdn.com/CommunityServer.Blogs.Components.WeblogFiles/00/00/00/75/24/metablogapi/6406.Genres_20ABC85C.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/6406.Genres_5F00_20ABC85C.png&quot;&gt;&lt;img width=&quot;465&quot; height=&quot;480&quot; title=&quot;Genres&quot; style=&quot;border: 0px currentcolor; display: inline; background-image: none;&quot; alt=&quot;Genres&quot; src=&quot;/assets/4428.Genres_thumb_275ED1DF.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/4428.Genres_5F00_thumb_5F00_275ED1DF.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;To build this view, we will add an &amp;ldquo;Items Page&amp;rdquo; and customize the Item template to display &lt;br /&gt;details specific to the &amp;ldquo;Genre&amp;rdquo; type in the client types such as &amp;ldquo;Name&amp;rdquo;. &lt;br /&gt;We further create a custom property called &amp;ldquo;TileTitle&amp;rdquo; which is the first title in the genre, &lt;br /&gt; to see how this is implemented, please consult the ODataSampleViewModel.cs file. &lt;br /&gt;When a user selects a &amp;ldquo;Genre&amp;rdquo; we will set the &amp;ldquo;SelectedGenre&amp;rdquo; property on the view model &lt;br /&gt;and navigate to the &amp;ldquo;Titles&amp;rdquo; screen shown below.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h4&gt;&amp;ldquo;Titles In Genre&amp;rdquo; view.&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://msdnshared.blob.core.windows.net/media/MSDNBlogsFS/prod.evol.blogs.msdn.com/CommunityServer.Blogs.Components.WeblogFiles/00/00/00/75/24/metablogapi/0702.Titles_470DABA7.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/0702.Titles_5F00_470DABA7.png&quot;&gt;&lt;img width=&quot;640&quot; height=&quot;350&quot; title=&quot;Titles&quot; style=&quot;border: 0px currentcolor; display: inline; background-image: none;&quot; alt=&quot;Titles&quot; src=&quot;/assets/7242.Titles_thumb_5B92FB25.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/7242.Titles_5F00_thumb_5F00_5B92FB25.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To create this view, we will add another &amp;ldquo;Items Page&amp;rdquo; and customize the item template to display details specific to the &amp;ldquo;Title&amp;rdquo; &lt;br /&gt;type in the generated client types. To load these titles, we track the selected Genre and call the &amp;ldquo;LoadTitlesForGenre&amp;rdquo; &lt;br /&gt;method on the view model with the selected genre. &lt;br /&gt;When a user selects a Title, we navigate to the &amp;ldquo;TitleDetails&amp;rdquo; view shown below, with the selected title as a navigation parameter.&lt;/p&gt;
&lt;h4&gt;&amp;ldquo;Title Details&amp;rdquo; view :&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://msdnshared.blob.core.windows.net/media/MSDNBlogsFS/prod.evol.blogs.msdn.com/CommunityServer.Blogs.Components.WeblogFiles/00/00/00/75/24/metablogapi/4812.TitleDetail_6650527A.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/4812.TitleDetail_5F00_6650527A.png&quot;&gt;&lt;img width=&quot;373&quot; height=&quot;480&quot; title=&quot;TitleDetail&quot; style=&quot;border: 0px currentcolor; display: inline; background-image: none;&quot; alt=&quot;TitleDetail&quot; src=&quot;/assets/7167.TitleDetail_thumb_261A3900.png&quot; original-url=&quot;http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-75-24-metablogapi/7167.TitleDetail_5F00_thumb_5F00_261A3900.png&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To create this view, we add a &amp;ldquo;Basic page&amp;rdquo; and customize the layout to show the above content &lt;br /&gt;from the selected title which is passed in as a navigation parameter.&lt;/p&gt;
&lt;p&gt;Phani Raj, &lt;br /&gt;Software Design Engineer 2, &lt;br /&gt;OData / WCF Data Services&lt;/p&gt;</content><author><name>{&quot;login&quot;=&gt;&quot;phanirajuyn&quot;, &quot;email&quot;=&gt;&quot;PhaniRaj@Microsoft.com&quot;, &quot;display_name&quot;=&gt;&quot;Phani Raju MSFT&quot;, &quot;first_name&quot;=&gt;&quot;&quot;, &quot;last_name&quot;=&gt;&quot;&quot;}</name><email>PhaniRaj@Microsoft.com</email></author><summary>The Source code for the sample app is available here ( Download )
You&amp;rsquo;ll need : 1. Windows 8 Consumer preview and developer tools 2. OData Client library preview for Windows 8 Metro ( Update:&amp;nbsp;Visual Studio 2012 RC&amp;nbsp;has been released and contains an updated version of these assemblies, along with fully-integrated support for Add Service Reference. Install the Ultimate, Professional, or Premium editions on&amp;nbsp;Windows 8 Release Preview&amp;nbsp;to get the update.) . 
We&amp;rsquo;re releasing a preview version of the client libraries for Windows 8 Metro-Style applications to give our users the ability to create applications that work on Windows 8 .&amp;nbsp;&amp;nbsp; This client library will work with servers that comply with the OData v1-v3 protocols. In the blog post below we will describe a sample application we built and is available for download using this client library.
Step Zero is to generate the client types for the Netflix OData Service using the DataSvcUtil.exe tool. We haven&amp;rsquo;t updated the &amp;ldquo;Add Service Reference&amp;rdquo;&amp;nbsp; gesture in Visual Studio 11 yet, so you&amp;rsquo;ll have to generate the client types manually . 
Here is how you generate the client proxy types for the Netflix OData Service
Open a command prompt as administrator and navigate to %windir%\Microsoft.NET\Framework\v4.0.30128
Run this command :
DataSvcutil.exe /uri:http://odata.netflix.com/Catalog/ /DataServiceCollection /Version:2.0  /out:netflixClientTypes.cs
Copy the generated netflixClientTypes.cs file into the application you create in the next step.
Open Visual Studio&amp;nbsp;11 &amp;gt; &amp;ldquo;Create new Project&amp;rdquo; &amp;gt;&amp;rdquo;Grid Application&amp;rdquo;

&amp;nbsp;
&amp;ldquo;Genres&amp;rdquo; view

&amp;nbsp;&amp;nbsp;
To build this view, we will add an &amp;ldquo;Items Page&amp;rdquo; and customize the Item template to display details specific to the &amp;ldquo;Genre&amp;rdquo; type in the client types such as &amp;ldquo;Name&amp;rdquo;. We further create a custom property called &amp;ldquo;TileTitle&amp;rdquo; which is the first title in the genre,  to see how this is implemented, please consult the ODataSampleViewModel.cs file. When a user selects a &amp;ldquo;Genre&amp;rdquo; we will set the &amp;ldquo;SelectedGenre&amp;rdquo; property on the view model and navigate to the &amp;ldquo;Titles&amp;rdquo; screen shown below.
&amp;nbsp;
&amp;ldquo;Titles In Genre&amp;rdquo; view.

To create this view, we will add another &amp;ldquo;Items Page&amp;rdquo; and customize the item template to display details specific to the &amp;ldquo;Title&amp;rdquo; type in the generated client types. To load these titles, we track the selected Genre and call the &amp;ldquo;LoadTitlesForGenre&amp;rdquo; method on the view model with the selected genre. When a user selects a Title, we navigate to the &amp;ldquo;TitleDetails&amp;rdquo; view shown below, with the selected title as a navigation parameter.
&amp;ldquo;Title Details&amp;rdquo; view :

To create this view, we add a &amp;ldquo;Basic page&amp;rdquo; and customize the layout to show the above content from the selected title which is passed in as a navigation parameter.
Phani Raj, Software Design Engineer 2, OData / WCF Data Services</summary></entry><entry><title>Updated Site navigation</title><link href="/updated-site-navigation/" rel="alternate" type="text/html" title="Updated Site navigation" /><published>2011-11-13T15:30:01+00:00</published><updated>2011-11-13T15:30:01+00:00</updated><id>/updated-site-navigation</id><content type="html" xml:base="/updated-site-navigation/">&lt;p&gt;I&#39;ve updated the site navigation to make it easier for my blog visitors to find useful links and quick answers to the questions they come here with.&lt;br /&gt;After analyzing the number of views on my blog posts, I&#39;ve curated them into links in the left hand side under :&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Useful links for OData Server applications : a list of links for debugging/configuring your OData Server application.&lt;/li&gt;
&lt;li&gt;Useful links for OData Cilent applications : a list of links for using the Data Services client library, DataServiceContext, effectively in your client applications.&lt;/li&gt;
&lt;li&gt;OData applications I built : Self-promoting set of links for applications I&#39;ve built which either use OData or enable people to browse OData feeds.&lt;/li&gt;
&lt;/ol&gt;</content><author><name>{&quot;login&quot;=&gt;&quot;phanirajuyn&quot;, &quot;email&quot;=&gt;&quot;PhaniRaj@Microsoft.com&quot;, &quot;display_name&quot;=&gt;&quot;Phani Raju MSFT&quot;, &quot;first_name&quot;=&gt;&quot;&quot;, &quot;last_name&quot;=&gt;&quot;&quot;}</name><email>PhaniRaj@Microsoft.com</email></author><category term="Announcement" /><category term="blog" /><summary>I&#39;ve updated the site navigation to make it easier for my blog visitors to find useful links and quick answers to the questions they come here with.After analyzing the number of views on my blog posts, I&#39;ve curated them into links in the left hand side under :

Useful links for OData Server applications : a list of links for debugging/configuring your OData Server application.
Useful links for OData Cilent applications : a list of links for using the Data Services client library, DataServiceContext, effectively in your client applications.
OData applications I built : Self-promoting set of links for applications I&#39;ve built which either use OData or enable people to browse OData feeds.</summary></entry><entry><title>Excel 2007 and consuming OData services</title><link href="/excel-2007-and-consuming-odata-services/" rel="alternate" type="text/html" title="Excel 2007 and consuming OData services" /><published>2011-09-06T04:19:00+00:00</published><updated>2011-09-06T04:19:00+00:00</updated><id>/excel-2007-and-consuming-odata-services</id><content type="html" xml:base="/excel-2007-and-consuming-odata-services/">&lt;p&gt;Hi all,&lt;/p&gt;
&lt;p&gt;I&#39;m running a short survey to guage interest in an Excel 2007 plugin that reads OData feeds.&lt;/p&gt;
&lt;p&gt;Please take this short survey so that I can figure out which scenarios you want to target with this plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.surveymonkey.com/s/DCX9QH7&quot; title=&quot;http://www.surveymonkey.com/s/DCX9QH7&quot; target=&quot;_blank&quot;&gt;Survey link&lt;/a&gt;&lt;/p&gt;</content><author><name>{&quot;login&quot;=&gt;&quot;phanirajuyn&quot;, &quot;email&quot;=&gt;&quot;PhaniRaj@Microsoft.com&quot;, &quot;display_name&quot;=&gt;&quot;Phani Raju MSFT&quot;, &quot;first_name&quot;=&gt;&quot;&quot;, &quot;last_name&quot;=&gt;&quot;&quot;}</name><email>PhaniRaj@Microsoft.com</email></author><summary>Hi all,
I&#39;m running a short survey to guage interest in an Excel 2007 plugin that reads OData feeds.
Please take this short survey so that I can figure out which scenarios you want to target with this plugin.
Survey link</summary></entry><entry><title>PBA</title><link href="/pba/" rel="alternate" type="text/html" title="PBA" /><published>2011-08-15T14:42:59+00:00</published><updated>2011-08-15T14:42:59+00:00</updated><id>/pba</id><content type="html" xml:base="/pba/">&lt;p&gt;Test post, please ignore.&lt;/p&gt;</content><author><name>{&quot;login&quot;=&gt;&quot;phanirajuyn&quot;, &quot;email&quot;=&gt;&quot;PhaniRaj@Microsoft.com&quot;, &quot;display_name&quot;=&gt;&quot;Phani Raju MSFT&quot;, &quot;first_name&quot;=&gt;&quot;&quot;, &quot;last_name&quot;=&gt;&quot;&quot;}</name><email>PhaniRaj@Microsoft.com</email></author><summary>Test post, please ignore.</summary></entry><entry><title>T4 templates for WCF Data Services Partâ€“II, Client Code-Gen</title><link href="/t4-templates-for-wcf-data-services-partii-client-code-gen/" rel="alternate" type="text/html" title="T4 templates for WCF Data Services Partâ€“II, Client Code-Gen" /><published>2011-03-04T01:31:02+00:00</published><updated>2011-03-04T01:31:02+00:00</updated><id>/t4-templates-for-wcf-data-services-partii-client-code-gen</id><content type="html" xml:base="/t4-templates-for-wcf-data-services-partii-client-code-gen/">&lt;p&gt;&lt;a href=&quot;http://cid-925c2d2bb2d03c6b.office.live.com/self.aspx/Blog%20Demos/WCF%20Data%20Services%20T4%20Templates.zip&quot;&gt;Click here to download.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;GenerateDataServiceContext.tt &lt;/strong&gt;generates a strongly-typed DataServiceContext type based on the service description.     &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;GenerateEntityTypes.tt&lt;/strong&gt; generates the client-side proxies for entity types exposed by the OData service.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;GenerateViewModels.tt &lt;strong&gt;( Silverlight Only ) &lt;/strong&gt;&lt;/strong&gt;generates viewmodels based on the entity type and provides some ease-of-use apis.&lt;/p&gt;
&lt;p&gt;More documentation coming soon.&lt;/p&gt;</content><author><name>{&quot;login&quot;=&gt;&quot;phanirajuyn&quot;, &quot;email&quot;=&gt;&quot;PhaniRaj@Microsoft.com&quot;, &quot;display_name&quot;=&gt;&quot;Phani Raju MSFT&quot;, &quot;first_name&quot;=&gt;&quot;&quot;, &quot;last_name&quot;=&gt;&quot;&quot;}</name><email>PhaniRaj@Microsoft.com</email></author><category term="Documentation" /><category term="Silverlight" /><category term="T4 template" /><category term="Windows Phone" /><summary>Click here to download.
GenerateDataServiceContext.tt generates a strongly-typed DataServiceContext type based on the service description.     
GenerateEntityTypes.tt generates the client-side proxies for entity types exposed by the OData service.
GenerateViewModels.tt ( Silverlight Only ) generates viewmodels based on the entity type and provides some ease-of-use apis.
More documentation coming soon.</summary></entry></feed>
